openapi: 3.0.0
info:
  title: Users API
  version: 1.0.0
  description: API for user management and authentication

paths:
  /v1/users/me:
    get:
      summary: Get current user information
      tags:
        - Users
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: User information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'

    patch:
      summary: Update current user information
      tags:
        - Users
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: User information updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

components:
  schemas:
    UserUpdate:
      type: object
      properties:
        name:
          type: string
          description: The updated name of the user

    UserResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        status:
          type: string
          enum: [ACTIVE, INACTIVE]
        name:
          type: string
        email:
          type: string
          format: email
        credits_balance:
          type: integer
          description: The user's current credit balance

    Pagination:
      type: object
      properties:
        total_pages:
          type: integer
        current_page:
          type: integer
        items_per_page:
          type: integer

    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  parameters:
    PageParam:
      in: query
      name: page
      schema:
        type: integer
        default: 1
        minimum: 1
      description: Page number to retrieve
    ItemsPerPageParam:
      in: query
      name: items_per_page
      schema:
        type: integer
        default: 20
        minimum: 1
      description: Number of items to return per page

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key